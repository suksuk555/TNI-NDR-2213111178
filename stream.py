import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
import numpy as np
import matplotlib

matplotlib.rcParams['font.family'] = 'DejaVu Sans'

st.set_page_config(page_title="SCB Stock Trend", layout="wide")

st.markdown("""
    <style>
        .subtitle {
            font-size: 18px;
            color: #808080;
        }
    </style>
""", unsafe_allow_html=True)

st.title("üìà SCB Stock Closing Price Trend")

st.markdown('<div class="subtitle">‡∏î‡∏π‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏∏‡πâ‡∏ô SCB ‡πÇ‡∏î‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏∏‡πâ‡∏ô SCB 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</div><br>', unsafe_allow_html=True)

df = pd.read_excel("stock_test2.xlsx")

def convert_thai_date(thai_date_str):
    thai_months = {
        "‡∏°.‡∏Ñ.": "01", "‡∏Å.‡∏û.": "02", "‡∏°‡∏µ.‡∏Ñ.": "03", "‡πÄ‡∏°.‡∏¢.": "04",
        "‡∏û.‡∏Ñ.": "05", "‡∏°‡∏¥.‡∏¢.": "06", "‡∏Å.‡∏Ñ.": "07", "‡∏™.‡∏Ñ.": "08",
        "‡∏Å.‡∏¢.": "09", "‡∏ï.‡∏Ñ.": "10", "‡∏û.‡∏¢.": "11", "‡∏ò.‡∏Ñ.": "12"
    }
    day, thai_month, buddhist_year = thai_date_str.strip().split()
    month = thai_months[thai_month]
    year = str(int(buddhist_year) - 543)
    date_str = f"{year}-{month}-{day}"
    return pd.to_datetime(date_str)

df["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"] = df["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"].apply(convert_thai_date)
df_sorted = df.sort_values("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà")

X = df_sorted["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"].map(pd.Timestamp.toordinal).values.reshape(-1, 1)
y = df_sorted["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏¥‡∏î"].values
model = LinearRegression()
model.fit(X, y)
trend = model.predict(X)

col1, col2 = st.columns(2)

with col1:
    chart_type = st.selectbox(
        "üìä ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏£‡∏≤‡∏ü",
        ("Line Chart",  "Pie Chart")
    )

with col2:
    fig_width = st.slider("üìê ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏≤‡∏ü (‡∏ô‡∏¥‡πâ‡∏ß)", 8, 20, 12)
    fig_height = st.slider("üìè ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏≤‡∏ü (‡∏ô‡∏¥‡πâ‡∏ß)", 4, 12, 6)

fig, ax = plt.subplots(figsize=(fig_width, fig_height))

if chart_type == "Line Chart":
    ax.plot(df_sorted["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"], y, label="Actual Closing Price", marker='o')
    ax.plot(df_sorted["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"], trend, label="Trend (Linear Regression)", linestyle="--", color="red")
    ax.set_title("SCB Closing Price Trend (Line Chart)")
    ax.set_xlabel("Date")
    ax.set_ylabel("Closing Price (Baht)")
    ax.legend()
    ax.grid(True)


elif chart_type == "Pie Chart":
    latest_df = df_sorted.tail(5)
    ax.pie(latest_df["‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏¥‡∏î"], labels=latest_df["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"].dt.strftime('%Y-%m-%d'), autopct='%1.1f%%')
    ax.set_title("Pie Chart of Last 5 Closing Prices")

#‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü
st.pyplot(fig)

#‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 
with st.expander("üìã ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏¥‡∏î‡πÅ‡∏ö‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á"):
    df_display = df_sorted.copy()
    df_display["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"] = df_display["‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"].dt.strftime("%Y-%m-%d")
    df_display.index = range(1, len(df_display) + 1)

    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 2 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    st.dataframe(df_display.style.format({col: "{:.2f}" for col in df_display.select_dtypes(include='number').columns}))

st.markdown("üîó ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô SCB ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà [SETTRADE](https://www.settrade.com/th/equities/quote/SCB/historical-trading)")

st.markdown("<br><hr><div style='text-align:center; font-size:16px;'>‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏ä‡∏±‡∏¢ ‡∏°‡∏∏‡∏Å‡πÇ‡∏ä‡∏Ñ‡∏ß‡∏±‡∏í‡∏ô‡∏≤ 2213111178</div>", unsafe_allow_html=True)
